"""Initial migration

Revision ID: 2be3f57a7637
Revises: 76687ca20869
Create Date: 2025-05-30 14:31:58.313673

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2be3f57a7637'
down_revision: Union[str, None] = '76687ca20869'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('teacher')
    op.drop_table('employee')
    op.drop_table('students')
    op.drop_table('abebe')
    op.drop_table('student')
    op.drop_table('doctype')
    op.drop_table('studentsss')
    op.drop_table('studentss')
    op.drop_table('asdf')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('asdf',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', 'name', name=op.f('asdf_pkey'))
    )
    op.create_table('studentss',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', 'name', name=op.f('studentss_pkey'))
    )
    op.create_table('studentsss',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', 'name', name=op.f('studentsss_pkey'))
    )
    op.create_table('doctype',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('Name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('Description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Owner', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['Owner'], ['user.id'], name=op.f('doctype_Owner_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('doctype_pkey'))
    )
    op.create_table('student',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', 'name', name=op.f('student_pkey'))
    )
    op.create_table('abebe',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('string', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('abebe_pkey'))
    )
    op.create_table('students',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', 'name', name=op.f('students_pkey'))
    )
    op.create_table('employee',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', 'name', name=op.f('employee_pkey'))
    )
    op.create_table('teacher',
    sa.Column('Id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('Full_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('Phone_number', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('Id', name=op.f('teacher_pkey'))
    )
    # ### end Alembic commands ###
